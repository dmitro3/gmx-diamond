/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Launchpad,
  LaunchpadInterface,
} from "../../../contracts/facets/Launchpad";

const _abi = [
  {
    inputs: [],
    name: "Address_Cannot_Be_Zero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Address_Is_A_Contract",
    type: "error",
  },
  {
    inputs: [],
    name: "End_Registration",
    type: "error",
  },
  {
    inputs: [],
    name: "Insufficient_Allowance",
    type: "error",
  },
  {
    inputs: [],
    name: "Insufficient_Balance",
    type: "error",
  },
  {
    inputs: [],
    name: "Invalid_Action",
    type: "error",
  },
  {
    inputs: [],
    name: "Invalid_Price",
    type: "error",
  },
  {
    inputs: [],
    name: "MathOverflowedMulDiv",
    type: "error",
  },
  {
    inputs: [],
    name: "Not_Started_Registration",
    type: "error",
  },
  {
    inputs: [],
    name: "Overflow_0x11",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuard__ReentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "Sale_End",
    type: "error",
  },
  {
    inputs: [],
    name: "User_Already_Registered",
    type: "error",
  },
  {
    inputs: [],
    name: "User_Not_Expired",
    type: "error",
  },
  {
    inputs: [],
    name: "User_Not_Stake",
    type: "error",
  },
  {
    inputs: [],
    name: "Wait_For_Deposit_Times",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "HANDLE_DEPOSIT",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "HANDLE_REGISTER",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "calculateAllocation",
    outputs: [
      {
        internalType: "uint256",
        name: "allocation",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "calculateUnitQuantityTOKEN",
    outputs: [
      {
        internalType: "uint256",
        name: "unitQuantity",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611219806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80632dd2882014610051578063cc29bbc814610076578063e2bbb15814610089578063f207564e1461009e575b600080fd5b61006461005f366004610f66565b6100b1565b60405190815260200160405180910390f35b610064610084366004610fa2565b610188565b61009c610097366004610fa2565b61025c565b005b61009c6100ac366004610fc4565b61074e565b60008281526000805160206111ed83398151915260205260408120602101546000805160206111ad833981519152904290811180156101025750600085815260028301602052604090206022015481105b801561013557506001600160a01b0384166000908152600383016020908152604080832088845290915290206001015415155b156101805760006101468686610a0e565b6001600160a01b038616600090815260038501602090815260408083208a845290915290206002015490915061017c9082610ff3565b9350505b505092915050565b60008281526000805160206111ed8339815191526020526040812060268101546015909101546000805160206111ad833981519152916001600160a01b03169083906101d49086611022565b90506000826001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610216573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023a9190611044565b61024590600a61114b565b9050610251818361115a565b979650505050505050565b338061027b57604051631c7e907b60e21b815260040160405180910390fd5b803b80156102ac576040516375ce97fd60e11b81526001600160a01b03831660048201526024015b60405180910390fd5b60026000805160206111cd83398151915254036102dc57604051635db5c7cd60e11b815260040160405180910390fd5b6102f360026000805160206111cd83398151915255565b60008481526000805160206111ed83398151915260205260409020546000805160206111ad8339815191529085904290339060ff1661034557604051631927bd6360e01b815260040160405180910390fd5b6000838152600285016020526040902054610100900460ff161561037c57604051631927bd6360e01b815260040160405180910390fd5b6000838152600285016020526040902054640100000000900460ff1680156103ce57506001600160a01b03811660009081526003850160209081526040808320868452909152902054610100900460ff165b156103ec57604051635ad5ffc760e01b815260040160405180910390fd5b6000838152600285016020526040812054640100000000900460ff16610413575086610429565b5060008381526002850160205260409020601501545b60008481526002860160205260409020601a810154601990910154036104625760405163e5fd8cc560e01b815260040160405180910390fd5b6000848152600286016020526040902054640100000000900460ff1615801561049d575060008481526002860160205260409020601d015481105b156104bb57604051633ef4a55360e21b815260040160405180910390fd5b6000848152600286016020526040812054640100000000900460ff16156104e35760016104ed565b6104ed8583610188565b60008681526002880160205260408120601a81015460199091015492935090916105179190610ff3565b90508082111561053a576040516304d5fae560e31b815260040160405180910390fd5b6001600160a01b03841660009081526003880160209081526040808320898452909152902054610100900460ff166105df576001600160a01b038416600081815260038901602090815260408083208a84528252808320805461ff00191661010017905560028b01825282206029810180546001818101835591855292842090920180546001600160a01b031916909417909355908890526017909101805490910190555b6001600160a01b0384166000908152600388016020908152604080832089845290915290205460ff1680156106265750600086815260028801602052604090206021015485115b80156106445750600086815260028801602052604090206022015485105b1561067a57600086815260028801602052604090205461067590600190640100000000900460ff1688868689610b5f565b61072a565b6000868152600288016020526040902060230154851180156106ae5750600086815260028801602052604090206024015485105b156107115760008681526002880160205260409020601e01548311156106e7576040516304d5fae560e31b815260040160405180910390fd5b60008681526002880160205260408120546106759190640100000000900460ff1688868689610b5f565b6040516363ecbe0560e01b815260040160405180910390fd5b5050505050505061074860016000805160206111cd83398151915255565b50505050565b338061076d57604051631c7e907b60e21b815260040160405180910390fd5b803b8015610799576040516375ce97fd60e11b81526001600160a01b03831660048201526024016102a3565b60026000805160206111cd83398151915254036107c957604051635db5c7cd60e11b815260040160405180910390fd5b6107e060026000805160206111cd83398151915255565b60008381526000805160206111ed8339815191526020526040902054429033906000805160206111ad8339815191529060ff1661083057604051631927bd6360e01b815260040160405180910390fd5b6000868152600282016020526040902054610100900460ff161561086757604051631927bd6360e01b815260040160405180910390fd5b6001600160a01b03821660009081527f60276f0d94de1c981a8dec512b88d2f65edc9a710688c20661ef1db583342c806020526040812060030154908190036108c35760405163a0d05dfb60e01b815260040160405180910390fd5b6001600160a01b038316600090815260038301602090815260408083208a845290915290205460ff161561090a57604051632b9f70cf60e21b815260040160405180910390fd5b60008781526002830160205260409020601f015484101561093e57604051632b8900d160e21b815260040160405180910390fd5b60008781526002830160209081526040909120015484111561097357604051635f7f33ad60e11b815260040160405180910390fd5b60008781526002830160209081526040808320601c018054850190556001600160a01b0386168084526003860183528184208b8552835292819020805460ff19166001908117825501849055514281527fcdbd1f35185c27f6d77889c58aa09bf47b528ce36537960e593001701f576aff910160405180910390a250505050610a0960016000805160206111cd83398151915255565b505050565b60008281526000805160206111ed8339815191526020908152604080832060260154815163313ce56760e01b815291516000805160206111ad833981519152936001600160a01b03909216928592849263313ce5679260048082019392918290030181865afa158015610a85573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa99190611044565b610ab490600a61114b565b60008781526002850160209081526040808320601c01546001600160a01b038a1684526003880183528184208b85529092528220600101549293509091610b0491670de0b6b3a764000090610ea1565b600088815260028601602052604081206019015491925090610b2890839085610ea1565b6000898152600287016020526040902060150154909150610b53908290670de0b6b3a7640000610ea1565b98975050505050505050565b60008481526000805160206111ed83398151915260205260408120602701546000805160206111ad833981519152916001600160a01b0390911690888015610ba5575087155b15610bfc576000610bb688866100b1565b905080600003610bd957604051631927bd6360e01b815260040160405180910390fd5b80871115610bfa57604051633ef4a55360e21b815260040160405180910390fd5b505b87610c5b57506001600160a01b03831660009081526003838101602090815260408084208a85528252808420600280820180548c01905593018054890190559185019052902060188101805487019055601a0180548501905584610cbb565b50600086815260028381016020908152604080842060158101546001600160a01b0389168652600380890185528387208d88529094529190942092830180548201905560188401805482019055601a909301805460019081019091559101555b6040516370a0823160e01b81526001600160a01b0385811660048301528291908416906370a0823190602401602060405180830381865afa158015610d04573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d289190611171565b1015610d4757604051633bf1830560e21b815260040160405180910390fd5b604051636eb1769f60e11b81526001600160a01b03858116600483015230602483015282919084169063dd62ed3e90604401602060405180830381865afa158015610d96573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dba9190611171565b1015610dd9576040516335473b8f60e01b815260040160405180910390fd5b6040516323b872dd60e01b81526001600160a01b038581166004830152306024830152604482018390528316906323b872dd906064016020604051808303816000875af1158015610e2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e52919061118a565b50604080518281524260208201526001600160a01b038616917f89e673a308b2afc7ecc23de6ad48b236b878d383095ce9d42e4bd195bdfcffca910160405180910390a2505050505050505050565b6000838302816000198587098281108382030391505080600003610ed857838281610ece57610ece61100c565b0492505050610f5f565b808411610ef85760405163227bc15360e01b815260040160405180910390fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150505b9392505050565b60008060408385031215610f7957600080fd5b8235915060208301356001600160a01b0381168114610f9757600080fd5b809150509250929050565b60008060408385031215610fb557600080fd5b50508035926020909101359150565b600060208284031215610fd657600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561100657611006610fdd565b92915050565b634e487b7160e01b600052601260045260246000fd5b60008261103f57634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561105657600080fd5b815160ff81168114610f5f57600080fd5b600181815b808511156110a257816000190482111561108857611088610fdd565b8085161561109557918102915b93841c939080029061106c565b509250929050565b6000826110b957506001611006565b816110c657506000611006565b81600181146110dc57600281146110e657611102565b6001915050611006565b60ff8411156110f7576110f7610fdd565b50506001821b611006565b5060208310610133831016604e8410600b8410161715611125575081810a611006565b61112f8383611067565b806000190482111561114357611143610fdd565b029392505050565b6000610f5f60ff8416836110aa565b808202811582820484141761100657611006610fdd565b60006020828403121561118357600080fd5b5051919050565b60006020828403121561119c57600080fd5b81518015158114610f5f57600080fdfe5c36f7b68020259480a9e03913c435e65fa8b8a9e3b71b628daf6fa3029785d909acf4e54214992e70883cf7dcd6957ff2c71cd9e14df4bec4383bc0d11607dc5c36f7b68020259480a9e03913c435e65fa8b8a9e3b71b628daf6fa3029785dba164736f6c6343000814000a";

type LaunchpadConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LaunchpadConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Launchpad__factory extends ContractFactory {
  constructor(...args: LaunchpadConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Launchpad> {
    return super.deploy(overrides || {}) as Promise<Launchpad>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Launchpad {
    return super.attach(address) as Launchpad;
  }
  override connect(signer: Signer): Launchpad__factory {
    return super.connect(signer) as Launchpad__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LaunchpadInterface {
    return new utils.Interface(_abi) as LaunchpadInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Launchpad {
    return new Contract(address, _abi, signerOrProvider) as Launchpad;
  }
}
